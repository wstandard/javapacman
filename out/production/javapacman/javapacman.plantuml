@startuml

title __JAVAPACMAN's Class Diagram__\n

    class Board {
        ~ New : int
        {static} ~ demo : boolean
        ~ dying : int
        ~ gridSize : int
        ~ lastPelletEatenX : int
        ~ lastPelletEatenY : int
        ~ max : int
        ~ numLives : int
        ~ overScreen : boolean
        ~ pellets : boolean[][]
        ~ state : boolean[][]
        ~ stopped : boolean
        ~ timer : long
        ~ titleScreen : boolean
        ~ winScreen : boolean
        + Board()
        + paint()
        + repaintChanges()
        + reset()
        + updateMap()
        ~ resetMovers()
        - collidedWithGhost()
        - die()
        - eatPellet()
        - initGame()
        - killPacman()
        - startNewGame()
    }

  

    class GameSounds {
        ~ death : Clip
        ~ newGame : Clip
        ~ nomNom : Clip
        ~ stopped : boolean
        + GameSounds()
        + death()
        + newGame()
        + nomNom()
        + nomNomStop()
    }

  

    class Ghost {
        + Ghost()
        + collidedWithPlayer()
        + update()
    }

  

    class InputListener {
        + InputListener()
        + keyPressed()
        + keyReleased()
        + keyTyped()
        + mouseClicked()
        + mouseEntered()
        + mouseExited()
        + mousePressed()
        + mouseReleased()
    }

  

    class Mover {
        ~ direction : char
        ~ frameCount : int
        ~ gridSize : int
        ~ increment : int
        ~ lastPelletX : int
        ~ lastPelletY : int
        ~ lastX : int
        ~ lastY : int
        ~ max : int
        ~ pelletX : int
        ~ pelletY : int
        ~ state : boolean[][]
        ~ x : int
        ~ y : int
        + Mover()
        + isChoiceDest()
        + isValidDest()
        + move()
        + newDirection()
        + updatePellet()
        + updateState()
    }

  

    class Pacman {
        ~ frameTimer : Timer
        ~ timer : long
        ~ titleTimer : long
        + Pacman()
        {static} + main()
        + update()
        - reset()
    }

  

    class Player {
        ~ currDirection : char
        ~ desiredDirection : char
        ~ pelletsEaten : int
        ~ stopped : boolean
        ~ teleport : boolean
        + Player()
        + move()
        + update()
    }

  

    class Renderer {
        {static} + g : Graphics
        ~ gameOverImage : Image
        ~ ghost10 : Image
        ~ ghost11 : Image
        ~ ghost20 : Image
        ~ ghost21 : Image
        ~ ghost30 : Image
        ~ ghost31 : Image
        ~ ghost40 : Image
        ~ ghost41 : Image
        ~ pacmanDownImage : Image
        ~ pacmanImage : Image
        ~ pacmanLeftImage : Image
        ~ pacmanRightImage : Image
        ~ pacmanUpImage : Image
        ~ titleScreenImage : Image
        ~ winScreenImage : Image
        {static} - font : Font
        + drawBoard()
        + drawLives()
        + drawPellets()
        {static} + drawScore()
        + fillPellet()
        + setGraphic()
        ~ drawDeath()
        ~ drawGameOverScreen()
        ~ drawGameScreens()
        ~ drawGhost()
        ~ drawOver()
        ~ drawPacman()
        ~ drawTitleScreen()
        ~ drawWinScreen()
        ~ optimizeDrawCalls()
    }

  

    class Score {
        ~ currScore : int
        ~ highScore : int
        + Score()
        + clearHighScores()
        + initHighScores()
        + update()
        + updateScore()
    }

  

  Board -up-|> javax.swing.JPanel
  Board o-- Ghost : ghost1
  Board o-- Ghost : ghost2
  Board o-- Ghost : ghost3
  Board o-- Ghost : ghost4
  Board o-- Player : player
  Board o-- Renderer : renderer
  Board o-- Score : score
  Board o-- GameSounds : sounds
  Ghost -up-|> Mover
  InputListener .up.|> java.awt.event.KeyListener
  InputListener .up.|> java.awt.event.MouseListener
  InputListener o-- Board : b
  Pacman -up-|> javax.swing.JFrame
  Pacman o-- Board : b
  Pacman o-- InputListener : input
  Player -up-|> Mover


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
